load("@npm//apps/team-bm/bm-testhub-frontend:@remix-run/dev/package_json.bzl", remix_dev = "bin")
load("@npm//apps/team-bm/bm-testhub-frontend:@remix-run/serve/package_json.bzl", remix_serve = "bin")
load("@aspect_rules_js//js:defs.bzl", "js_image_layer", "js_run_devserver")
load("@npm//:defs.bzl", "npm_link_all_packages")
load("//build-tools/shifter2:shifter_build_2.bzl", "stamped_container_image")
load("//build-tools:app_info.bzl", "app_name")

npm_link_all_packages()

DEPS = [
    ":node_modules/react",
    ":node_modules/react-dom",
    ":node_modules/@remix-run/serve",
    ":node_modules/@remix-run/node",
    ":node_modules/@remix-run/react",
    ":node_modules/@remix-run/web-fetch",
    "jokul-tokens.ts",
    "tailwind.config.ts",
    ":node_modules/isbot",
    ":node_modules/tailwindcss",
    "//apps/team-bm/bm-testhub-frontend/app",
    "tsconfig.json",
    "package.json",
    "remix.config.js",
]

DEV_DEPS = [
    ":node_modules/@remix-run/dev",
    "remix.env.d.ts",
]

remix_dev.remix_binary(name = "remix_bin")

remix_dev.remix(
    name = "app",
    srcs = glob([
        "public/**",
    ]) + DEV_DEPS + DEPS,
    args = ["build"],
    chdir = package_name(),
    out_dirs = [
        "build",
    ],
    tags = [
        "app",
        "no-sandbox",
    ],
)

js_run_devserver(
    name = "dev",
    args = [
        "dev --manual",
    ],
    chdir = package_name(),
    data = glob(
        [
            "public/**",
            ".env",
        ],
        allow_empty = True,
    ) + DEPS + DEV_DEPS,
    tool = ":remix_bin",
)

remix_serve.remix_serve_binary(
    name = "start",
    args = [
        "build/index.js",
    ],
    chdir = package_name(),
    data = DEPS + [
        ":app",
    ] + glob(
        [
            "public/**",
            ".env",
        ],
        allow_empty = True,
    ),
)

platform(
    name = "linux_amd64",
    constraint_values = [
        "@platforms//os:linux",
        "@platforms//cpu:x86_64",
    ],
)

js_image_layer(
    name = "app_layer",
    binary = ":start",
    platform = ":linux_amd64",
    root = "/app",
    tags = ["manual"],
)

target_name = "start"

path_to_start = "/app/" + package_name() + "/" + target_name

path_to_runfiles = path_to_start + ".runfiles/_main"

path_to_package_root = path_to_runfiles + "/" + package_name()

stamped_container_image(
    name = app_name(),
    base_image = "@ubi9_minimal",
    # js_image_layer root + package + / + name of binary
    cmd = [
        path_to_start,
        "{}/build/index.js".format(path_to_package_root),
    ],
    entrypoint = ["bash"],
    image_layers = [
        ":app_layer",
    ],
    image_name = app_name(),
    workdir = path_to_runfiles,
)
